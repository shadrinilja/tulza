# Generated by Django 3.1.7 on 2022-04-01 13:12
import django
import os
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "tulza.settings")
django.setup()
from django.db import migrations
from bot.models import Bb
from bot.models import Inquiry
from urllib.parse import urlsplit, urlencode
import json
from urllib.request import urlopen
import time
start_time = time.time()

__const_url = 'https://bus.gov.ru/public/download/download.html?id='
prs_inquiry = Inquiry('https://bus.gov.ru/public/agency/agency_tasks.json?agency=182691&task=')
get_prs_inquiry = prs_inquiry.get_start_url()
prs_part_agency = prs_inquiry.InquiryPrs()

prs_download_doc = Inquiry(__const_url)
get_get_prs_inquiry_doc = prs_download_doc.get_start_url()
prs_part_doc = prs_download_doc.InquiryPrs()


class JsonParse:
    def __init__(self, inquiry):
        self.inquiry = inquiry
    def AssemblyInquiry(self):##Собираем запрос
        tro = urlsplit(self.inquiry).scheme+'://'+ urlsplit(self.inquiry).netloc \
              + urlsplit(self.inquiry).path +'?'+urlencode(prs_part_agency)
        return tro
    def AssemblyInquiry_2(self):##Собираем запрос
        tro = urlsplit(self.inquiry).scheme+'://'+ urlsplit(self.inquiry).netloc \
              + urlsplit(self.inquiry).path +'?'+urlencode(prs_part_doc)
        return tro

def combine_names(apps, schema_editor):
    for tro in Bb.objects.all():
        lo = str(tro.id_ogr)
        InquiryParse = prs_part_agency
        InquiryParse['agency'] = lo
        InquiryParse['task'] = ''
        print(InquiryParse)
        a = JsonParse(get_prs_inquiry).AssemblyInquiry()
        print(a)
        response = urlopen(a)
        data_json = json.loads(response.read())
        tasks_dict = data_json['tasks']
        task = tasks_dict[-1:]
        for last_year in task:
            for key, values in last_year.items():
                all_last_year = last_year.get('id')
        obj_task = Bb.objects.get(id=tro.pk)
        obj_task.actual_year = all_last_year
        obj_task.save()
        Prs_tasks = prs_part_agency
        Prs_tasks['task'] = all_last_year
        b = JsonParse(get_prs_inquiry).AssemblyInquiry() ##Полная ссылка
        print(b)
        obj_url = Bb.objects.get(id=tro.pk)
        obj_url.url_pars = b
        obj_url.save()
        response = urlopen(b)
        data_json = json.loads(response.read())
        pubDate = data_json['currentTask']['attachments'][0]['publishDate']
        obj_pubD = Bb.objects.get(id=tro.pk)
        obj_pubD.publishDate = pubDate
        obj_pubD.save()
        doc = data_json['currentTask']['attachments'][0]['id']
        InquiryParse = prs_part_doc
        InquiryParse['id'] = doc
        print(InquiryParse)
        c = JsonParse(get_get_prs_inquiry_doc).AssemblyInquiry_2()
        print(c)
        obj_url_doc = Bb.objects.get(id=tro.pk)
        obj_url_doc.url_doc = c
        obj_url_doc.save()



class Migration(migrations.Migration):

    dependencies = [
        ('bot', '0003_auto_20220401_1611'),
    ]

    operations = [
        migrations.RunPython(combine_names),
    ]
print('1:'+str(start_time-time.time()))